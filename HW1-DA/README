Readme for the DistAlgo version

The main classes:

hw.da - the main launcher class, will setup everything
Master.da - the master class which handles all master's functions
Server.da - the server class to handle all the server duties
Client.da - the client class to handle all the client duties


INSTRUCTIONS:
To start the servers, clients and master do:
	dar -f hw.da <config filename>

We need to provide a config filename or the launcher will not start.
We decided to use a json file similar to our config file for NodeJS


BUGS AND LIMITATIONS:
- Bugs:
  - Do not support malformed config files

- Limitations:
	- DistAlgo does not support creation of processes in different
	nodes.


For language comparisons refer to the README for NodeJS



NOTES:
The config.json file contains test cases to test for deposit,withdraw and get balance
it also tests for Insufficient funds and inconsistent with history errors

There are multiple config files to test for each specific test cases in the grading sheet.

config_head_fails.json tests for head and tail failing at the same time and also simulates message loss
on the client

config_new_node_fails.json tests for chain extension and failing of the new node during chain extension

config_old_tail_fails.json tests for chain extension and failure of the old tail during the chain extension

config_one_fails.json tests for any one node failing in the chain

config_pred_fails.json tests for any one node failing and then soon its predecessor also failing

config_suc_fails.json tests for any one failing and then soon its successor also failing

config_tail_fails.json tests for the tail of a chain failing


